#include <iostream>
#include<bits/stdc++.h>
#include<cmath>
using namespace std;

struct Node* head = NULL;

struct Node
{
    int x;
    int y;
    Node *next;
};

void AddFirst(int x , int y)
{
    //allocate node
    struct Node* new_node = (struct Node*) malloc(sizeof(struct Node));
    //put in the data
    new_node->x  = x;
    new_node->y  = y;
    //make next of the new node as head
    new_node->next = (head);
    //move the head to point the new_node
    (head)    = new_node;
}

void DelFirst()
{
    if (head == NULL)
        {cout<<"empty linked list";return ;}
   // Move the head pointer to the next node
    Node* temp = head;
    head = head->next;

    delete(temp);

}

void Del( int x,int y)
{

   if (head == NULL)
      {cout<<"empty linked list";return ;}

   //allocate two temp node
   struct Node* temp = head;
  struct Node* prev = NULL;

    if ((head->x)==x&&(head->y)==y)
    {
        head = temp->next;
        free(temp);
        cout<<'0'<<endl;
        return;
    }


    for (int i=0; temp!=NULL; i++)
         {
             if(temp->x==x&&temp->y==y)
             {
                 break;
             }
             prev = temp;
             temp = temp->next;
         }

    if (temp == NULL )
      {cout<<"not found";return ;}

    // Node temp->next is the node to be deleted
    struct Node *next = temp->next;

    // Unlink the node from linked list
    free(temp);

    prev->next = next;
    cout<<'0'<<endl;
}

void search(int d)
{	int x,y;
	struct Node *temp;
	temp = head;
	while(temp!=NULL)
	{
		float r=sqrt((temp->x)*(temp->x)+(temp->y)*(temp->y));
		if(r<=d)
		{
			cout<<"("<<temp->x<<","<<temp->y<<")";
		}
		temp=temp->next;
	}
	cout<<endl;
}

bool Search(int x,int y)
{
    struct Node* temp = head;
    while (temp!= NULL) {
        if((temp->x)==x&&(temp->y)==y)
        {
            return true;
        }
        temp=temp->next;
    }
    return false;
}

int Length()
{
    struct Node* temp = head;
    int l=0;
    while (temp!= NULL) {
        l++;
        temp=temp->next;
    }
    return l;
}
int main()
{



        int t;
        cin>>t;
       int arr[t][3];
       for(int i=0;i<t;i++){
        int a=0;
        int x=0;
        int y=0;
        cin>>a;
        if(a==1||a==3||a==5)
            cin>>x>>y;
        else if(a==4)
            cin>>x;
        arr[i][0]=a;
        arr[i][1]=x;
        arr[i][2]=y;
       }
       for(int i=0;i<t;i++){
        if(arr[i][0]==1)
            AddFirst(arr[i][1],arr[i][2]);
        else if(arr[i][0]==2)
            DelFirst();
        else if(arr[i][0]==3)
            Del(arr[i][1],arr[i][2]);
        else if(arr[i][0]==4)
           search(arr[i][1]);
        else if(arr[i][0]==5){
                if(Search(arr[i][1],arr[i][2]))
                     cout<<"TRUE"<<endl;
            else cout<<"FALSE"<<endl;
        }
        else if(arr[i][0]==6)
           cout<< Length()<<endl;
       }
}
